[versions]
accompanist = "0.24.7-alpha"
apollo = "3.3.0"
compose = "1.2.0-beta01"
coroutines = "1.6.1"
hilt = "2.42"
hiltx = "1.0.0"
kotlin = "1.6.21"
lifecycle = "2.4.1"
okhttp = "4.9.3"
orbit = "4.3.2"

# Coverage Engine
intellij = "1.0.663"

# Plugins
detekt = "1.20.0"

# Tests
androidx-test = "1.4.0"
kotest = "5.3.0"
mockk = "1.12.4"

[plugins]
apollo = { id = "com.apollographql.apollo3", version.ref = "apollo" }

[libraries]
# Accompanist
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-navigation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }

# AndroidX
androidx-activity = { module = "androidx.activity:activity-compose", version = "1.4.0" }

# Apollo
apollo = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }
apollo-cache = { module = "com.apollographql.apollo3:apollo-normalized-cache", version.ref = "apollo" }
apollo-cache-sql = { module = "com.apollographql.apollo3:apollo-normalized-cache-sqlite", version.ref = "apollo" }
apollo-mockserver = { module = "com.apollographql.apollo3:apollo-mockserver", version.ref = "apollo" }
apollo-testing = { module = "com.apollographql.apollo3:apollo-testing-support", version.ref = "apollo" }

# Compose
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose" }
compose-fonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-test-junit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }

# Coroutines
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# DataStore
datastore = { module = "androidx.datastore:datastore", version = "1.0.0" }

# Desugaring
desugaring = { module = "com.android.tools:desugar_jdk_libs", version = "1.1.5" }

# Detekt
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# Gradle
gradle-android = { module = "com.android.tools.build:gradle", version = "7.2.0" }
gradle-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradle-hilt = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-kover = { module = "org.jetbrains.kotlinx:kover", version = "0.5.0" }
gradle-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
gradle-updates = { module = "com.github.ben-manes:gradle-versions-plugin", version = "0.42.0" }

# Hilt
hilt = { module = "com.google.dagger:hilt-core", version.ref = "hilt" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-test = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

# HiltX
hiltx-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltx" }
hiltx-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltx" }

# Kotlin
kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

# LeakCanary
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version = "2.9.1" }

# Lifecycle
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
lifecycle-test = { module = "androidx.lifecycle:lifecycle-runtime-testing", version.ref = "lifecycle" }

# Napier
napier = { module = "io.github.aakira:napier", version = "2.5.0" }

# Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version = "2.4.2" }

# OkHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logger = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Orbit
orbit = { module = "org.orbit-mvi:orbit-viewmodel", version.ref = "orbit" }
orbit-test = { module = "org.orbit-mvi:orbit-test", version.ref = "orbit" }

# Serialization
protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version = "1.3.2" }

# Tests
## AndroidX Test
androidx-test = { module = "androidx.test:core-ktx", version.ref = "androidx-test" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version = "1.1.3" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test" }

## Fixtures
fixtures = { module = "com.appmattus.fixture:fixture", version = "1.2.0" }

## Kotest
kotest = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }

## MockK
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }

## Turbine
turbine = { module = "app.cash.turbine:turbine", version = "0.8.0" }

[bundles]
common = [
    "coroutines",
    "hilt",
    "kotlin",
]
common-android = [
    "coroutines-android",
    "hilt-android",
    "kotlin",
    "napier",
]

app = [
    "accompanist-navigation",
    "androidx-activity",
    "compose-material",
    "compose-material-icons",
    "hiltx-navigation",
    "navigation-compose",
]

kapt = [
    "hilt-compiler",
]
kapt-ui = [
    "hilt-compiler",
    "hiltx-compiler",
]

data-preferences = [
    "datastore",
    "protobuf",
]
data-remote = [
    "apollo",
    "apollo-cache",
]

ui-compose = [
    "accompanist-navigation",
    "accompanist-pager",
    "accompanist-pager-indicators",
    "compose-animation",
    "compose-foundation",
    "compose-foundation-layout",
    "compose-material",
    "compose-material-icons",
    "compose-ui",
    "compose-ui-tooling",
    "hiltx-navigation",
    "lifecycle-viewmodel",
    "orbit",
]

test = [
    "coroutines-test",
    "fixtures",
    "kotest",
    "kotest-assertions-core",
    "mockk",
    "orbit-test",
    "turbine",
]
test-android = [
    "coroutines-test",
    "androidx-test",
    "androidx-test-junit",
    "androidx-test-rules",
    "androidx-test-runner",
    "hilt-test",
    "kotest-assertions-core",
    "mockk-android",
    "turbine",
]

test-data-remote = [
    "apollo-mockserver",
    "apollo-testing",
]
test-ui = [
    "compose-ui-test-junit",
    "lifecycle-test",
]
