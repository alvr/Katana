name: Katana

on: [ push ]

env:
  TZ: Europe/Madrid

jobs:
  cancel-stale-jobs:
    name: Cancel stale jobs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Stale Jobs
        uses: styfle/cancel-workflow-action@0.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  assemble:
    name: Assembling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/gradle/libs.versions.toml', '**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Assemble Katana
        run: ./gradlew assembleDebug

  static-analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/gradle/libs.versions.toml', '**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Detekt Katana
        run: ./gradlew detektAll
      - name: Upload detekt report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: build/reports/detekt/detekt.sarif
          checkout_path: ${{ github.workspace }}
      - name: Run mobsfscan
        uses: MobSF/mobsfscan@a60d10a83af68e23e0b30611c6515da604f06f65
        with:
          args: . --sarif --output results.sarif || true
      - name: Upload mobsfscan report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

  unit-tests:
    name: Unit testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/gradle/libs.versions.toml', '**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build Katana
        run: ./gradlew unitTests koverMergedReport
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/kover/report.xml
          flags: unittests
          verbose: true

  instrumentation-tests:
    name: Instrumentation testing
    runs-on: macos-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        api-level: [ 29, 31 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/gradle/libs.versions.toml', '**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Setup AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ runner.os }}-avd-${{ matrix.api-level }}
          restore-keys: ${{ runner.os }}-avd
      - name: Assemble Katana for debug testing
        run: ./gradlew assembleDebugAndroidTest
      - name: Create AVD snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          force-avd-creation: false
          ram-size: 4096M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot."
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          disable-animations: true
          force-avd-creation: false
          ram-size: 4096M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          script: ./gradlew connectedDebugAndroidTest
      - name : Upload results
        if : ${{ always() }}
        uses : actions/upload-artifact@v2
        with :
          name : instrumentation-test-results-${{ matrix.api-level }}
          path : '**/build/reports/androidTests/connected/**'
