name: Pull requests

on: [ pull_request ]

jobs:
  build:
    name: Build & Test Katana
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-package: jdk
          java-version: 11
          cache: gradle
      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/gradle/libs.versions.toml') }}
      - name: Build Katana
        run: ./gradlew buildDebug lintDebug detektAll unitTests --no-daemon

#  instrumentation-tests:
#    name: Instrumentation tests
#    runs-on: macos-latest
#    needs: [ build ]
#    strategy:
#      matrix:
#        api-level: [ 23, 29, 31 ]
#    timeout-minutes: 30
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 1
#      - name: Setup Java
#        uses: actions/setup-java@v2
#        with:
#          java-version: 11
#          distribution: temurin
#      - name: Setup Gradle Cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches/modules-*
#            ~/.gradle/caches/jars-*
#            ~/.gradle/caches/build-cache-*
#            ~/.gradle/wrapper
#          key: gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties', '**/gradle/libs.versions.toml') }}
#      - name: Setup AVD Cache
#        uses: actions/cache@v2
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ runner.os }}-${{ matrix.api-level }}
#      - name: AVD info
#        id: avd-info
#        run: |
#          echo "::set-output name=arch::$(if [ ${{ matrix.api-level }} -ge 30 ]; then echo x86_64; else echo x86; fi)"
#          echo "::set-output name=target::$(echo default)"
#      - name: Create AVD snapshot
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          arch: ${{ steps.avd-info.outputs.arch }}
#          target: ${{ steps.avd-info.outputs.target }}
#          disable-animations: false
#          force-avd-creation: false
#          ram-size: 4096M
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          script: echo "Generated AVD snapshot."
#      - name: Instrumentation tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          arch: ${{ steps.avd-info.outputs.arch }}
#          target: ${{ steps.avd-info.outputs.target }}
#          disable-animations: true
#          force-avd-creation: false
#          ram-size: 4096M
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
#          script: ./gradlew --no-daemon allTests
