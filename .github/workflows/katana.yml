name: Katana

on:
  pull_request:
  push:
    branches:
      - develop
    tags:
      - v*

env:
  TZ: Europe/Madrid

jobs:
  cancel-stale-jobs:
    name: Cancel stale jobs
    runs-on: macos-latest
    steps:
      - name: Cancel Stale Jobs
        uses: styfle/cancel-workflow-action@0.10.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  assemble:
    name: Assembling
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Common Steps
        uses: ./.github/actions/common-steps
      - name: Assemble Katana
        run: ./gradlew assembleDebug --no-daemon

  static-analysis:
    name: Static analysis
    runs-on: macos-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Common Steps
        uses: ./.github/actions/common-steps
      - name: Run detekt
        run: ./gradlew detektAll lintDebug --no-daemon
      - name: Upload static reports artifact
        uses: actions/upload-artifact@v3
        with:
          name: static-report
          path: |
            build/reports/detekt/detekt.xml
            **/build/reports/lint-results-debug.xml
          retention-days: 1
      - name: Analyze detekt report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: build/reports/detekt/detekt.sarif
          checkout_path: ${{ github.workspace }}

  unit-tests:
    name: Unit testing
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Common Steps
        uses: ./.github/actions/common-steps
      - name: Run unit tests
        run: ./gradlew unitTests koverXmlReport koverMergedReport koverMergedVerify --no-daemon
      - name: Upload tests reports artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tests-reports
          path: |
            **/build/reports/tests/test
            **/build/reports/tests/testDebugUnitTest
          retention-days: 7
      - name: Upload coverage reports artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports
          path: '**/build/reports/kover/project-xml/report.xml'
          retention-days: 1
      - name: Upload report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/kover/report.xml
          flags: unittests
          verbose: true

  sonar:
    name: SonarQube
    runs-on: macos-latest
    continue-on-error: true
    needs: [ static-analysis, unit-tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Common Steps
        uses: ./.github/actions/common-steps
      - name: Download static report artifacts
        uses: actions/download-artifact@v3
        with:
          name: static-report
          path: .
      - name: Download coverage artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-reports
          path: .
      - name: Run SonarQube
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --no-daemon
      - name: Run SonarQube in PR
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }} -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} --no-daemon

  deploy-staging:
    name: Staging deployment
    runs-on: macos-latest
    if: github.ref == 'refs/heads/develop'
    needs: [ assemble, static-analysis, unit-tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Common Steps
        uses: ./.github/actions/common-steps
      - name: Decode keystore
        uses: timheuer/base64-to-file@v1.1
        with:
          fileDir: .
          fileName: ${{ secrets.SIGNING_FILE }}
          encodedString: ${{ secrets.SIGNING_FILE_BASE64 }}
      - name: Build staging APK
        env:
          SIGNING_ALIAS: ${{ secrets.SIGNING_ALIAS }}
          SIGNING_ALIAS_PASS: ${{ secrets.SIGNING_ALIAS_PASS }}
          SIGNING_FILE: ${{ secrets.SIGNING_FILE }}
          SIGNING_FILE_PASS: ${{ secrets.SIGNING_FILE_PASS }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: ./gradlew assembleRelease --no-daemon
      - name: Publish staging APK to AppCenter
        uses: akiojin/appcenter-distribute-github-action@v1
        with:
          app: KatanaApp/Katana
          token: ${{ secrets.APPCENTER_TOKEN }}
          group: Testers
          path: app/build/outputs/apk/release/app-release.apk
          silent: false
          debug: false

  deploy-production:
    name: Production deployment
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ assemble, static-analysis, unit-tests ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Common Steps
        uses: ./.github/actions/common-steps
      - name: Decode keystore
        uses: timheuer/base64-to-file@v1.1
        with:
          fileDir: .
          fileName: ${{ secrets.SIGNING_FILE }}
          encodedString: ${{ secrets.SIGNING_FILE_BASE64 }}
      - name: Build production AAB
        env:
          SIGNING_ALIAS: ${{ secrets.SIGNING_ALIAS }}
          SIGNING_ALIAS_PASS: ${{ secrets.SIGNING_ALIAS_PASS }}
          SIGNING_FILE: ${{ secrets.SIGNING_FILE }}
          SIGNING_FILE_PASS: ${{ secrets.SIGNING_FILE_PASS }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: ./gradlew bundleRelease --no-daemon
      - name: Publish production AAB to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: dev.alvr.katana
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          mappingFile: app/build/outputs/mapping/release/mapping.txt
